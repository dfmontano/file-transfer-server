/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package filetransferserver;

import java.net.ServerSocket;
import filetransferserver.RecibirArchivo;
import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JButton;

/**
 *
 * @author cristian mendoza
 */
public class Recibir_imagen extends javax.swing.JFrame {

    /**
     * Creates new form Recibir_imagen
     */
    private ServerSocket servidor = null;
    public int tam;
    public String nombreArchivo;
    public File fos;
    public String direc = "users/dfmontano/Desktop/";// cambiar direccion de acuerdo al equipo

    public Recibir_imagen() throws IOException {
        initComponents();

        servidor = new ServerSocket(4480);
        this.setSize(800,500); 
        jLabel3.setVisible(false);
        jltama.setVisible(false);
        jbdescargar.setVisible(false);
        jLabel1.setVisible(false);
        jlruta.setVisible(false);
        jbrecibir.setVisible(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        spotlight = new javax.swing.JLabel();
        jlimagen = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jltama = new javax.swing.JLabel();
        jbrecibir = new javax.swing.JButton();
        jbdescargar = new javax.swing.JButton();
        jLservicio = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jlruta = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Recibir archivo");
        getContentPane().setLayout(null);

        spotlight.setBackground(new java.awt.Color(255, 0, 51));
        spotlight.setForeground(new java.awt.Color(255, 0, 51));
        spotlight.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(spotlight);
        spotlight.setBounds(30, 140, 40, 20);
        getContentPane().add(jlimagen);
        jlimagen.setBounds(320, 170, 430, 260);

        jLabel3.setText("Tamaño: ");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(320, 430, 60, 20);
        getContentPane().add(jltama);
        jltama.setBounds(390, 420, 110, 40);

        jbrecibir.setText("Levantar servicio");
        jbrecibir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbrecibirMouseClicked(evt);
            }
        });
        jbrecibir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbrecibirActionPerformed(evt);
            }
        });
        getContentPane().add(jbrecibir);
        jbrecibir.setBounds(80, 140, 130, 30);

        jbdescargar.setText("Previsualizar y Descargar");
        jbdescargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbdescargarActionPerformed(evt);
            }
        });
        getContentPane().add(jbdescargar);
        jbdescargar.setBounds(30, 200, 170, 50);

        jLservicio.setText("Esperando Imagen...");
        getContentPane().add(jLservicio);
        jLservicio.setBounds(220, 140, 137, 30);

        jLabel1.setText("Ruta de descarga:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(350, 130, 120, 30);
        getContentPane().add(jlruta);
        jlruta.setBounds(450, 130, 320, 40);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/fondo1.png"))); // NOI18N
        jLabel4.setText("jLabel4");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(0, 10, 780, 450);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/fondo.PNG"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 0, 790, 480);

        jLabel6.setText("jLabel6");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(30, 110, 45, 16);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbrecibirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbrecibirActionPerformed
//        spotlight.setBackground(Color.GREEN);
        jLservicio.setText("Imagen Recibida");
        System.out.println("Service up");
        
        if(evt.getSource() instanceof JButton){
            ((JButton) evt.getSource()).setBackground(Color.GREEN);
        }
        
        try {
            jbdescargar.setVisible(true);
            // Creamos el socket que atendera el servidor
            Socket cliente = servidor.accept();

            // Creamos flujo de entrada para leer los datos que envia el cliente 
            DataInputStream dis = new DataInputStream(cliente.getInputStream());

            // Obtenemos el nombre del archivo
            nombreArchivo = dis.readUTF().toString();

            // Obtenemos el tamaño del archivo
            tam = dis.readInt();
            System.out.println("Tamaño imagen " + tam);
            System.out.println("Recibiendo imagen " + nombreArchivo);

            // Creamos flujo de salida, este flujo nos sirve para 
            // indicar donde guardaremos el archivo
            FileOutputStream fos = new FileOutputStream(direc + nombreArchivo);
            BufferedOutputStream out = new BufferedOutputStream(fos);
            BufferedInputStream in = new BufferedInputStream(cliente.getInputStream());

            // System.out.println( "Ruta  "+fos );
            // Creamos el array de bytes para leer los datos del archivo
            byte[] buffer = new byte[tam];

            // Obtenemos el archivo mediante la lectura de bytes enviados
            for (int i = 0; i < buffer.length; i++) {
                buffer[i] = (byte) in.read();
            }

            // Escribimos el archivo 
            out.write(buffer);

            // Cerramos flujos
            out.flush();
            in.close();
            out.close();
            cliente.close();

            System.out.println("Imagen recibida " + nombreArchivo);

        } catch (Exception e) {
            System.out.println("Recibir: " + e.toString());

        }


    }//GEN-LAST:event_jbrecibirActionPerformed

    private void jbdescargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbdescargarActionPerformed
        // TODO add your handling code here:
        jLabel3.setVisible(true);
        jltama.setVisible(true);        
        jLabel1.setVisible(true);
        jlruta.setVisible(true);
        String tamano = String.valueOf(tam);
        jltama.setText(tamano + " Bytes");

        String ruta = String.valueOf(direc + nombreArchivo);
        URL url = this.getClass().getResource(ruta);
        ImageIcon icon = new ImageIcon(ruta);
        System.out.println(ruta);
        Icon icono = new ImageIcon(icon.getImage().getScaledInstance(jlimagen.getWidth(), jlimagen.getHeight(), Image.SCALE_DEFAULT));
        jlimagen.setIcon(icono);

        jlruta.setText(ruta);

    }//GEN-LAST:event_jbdescargarActionPerformed

    private void jbrecibirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbrecibirMouseClicked
        // TODO add your handling code here:
//                if(evt.getSource() instanceof JButton){
//            ((JButton) evt.getSource()).setBackground(Color.GREEN);
//        }
    }//GEN-LAST:event_jbrecibirMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Recibir_imagen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Recibir_imagen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Recibir_imagen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Recibir_imagen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Recibir_imagen().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(Recibir_imagen.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLservicio;
    private javax.swing.JButton jbdescargar;
    private javax.swing.JButton jbrecibir;
    private javax.swing.JLabel jlimagen;
    private javax.swing.JLabel jlruta;
    private javax.swing.JLabel jltama;
    private javax.swing.JLabel spotlight;
    // End of variables declaration//GEN-END:variables
}
